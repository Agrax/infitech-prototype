#loader gregtech

import mods.gregtech.recipe.RecipeMap;
/*
val canner as RecipeMap = RecipeMap.getByName("canner");

canner.recipeBuilder()
    .inputs([<ore:foilGold>, <ore:dustCocoa> * 2])
    .outputs([<metaitem:coin.chocolate> * 12])
    .duration(40).EUt(30)
    .buildAndRegister();
    
    
val chemicalreactor as RecipeMap = RecipeMap.getByName("chemicalreactor");    
    
chemicalreactor.recipeBuilder()
.inputs([<ore:foilGold>])
.fluidInputs([<liquid:liquid.nitrogen_dioxide>, ])
.fluidOutputs(<liquid:liquid.nitrogen_dioxide> * 400)
.outputs(<ore:dustCocoa> * 2)
.duration(950)
.EUt(30)
.buildAndRegister();

//val smelter = RecipeMap.getByName("alloysmelter")
//smelter.findRecipe(512, [<minecraft:iron_ingot>, <metaitem:mold.plate>], null).remove()

val fermenter as RecipeMap = RecipeMap.getByName("fermenter"); 
fermenter.recipeBuilder()
.fluidInputs([<liquid:liquid.biomass> * 1000])
.fluidOutputs(<liquid:fermented_biomass> * 1000)
.duration(40)
.EUt(20)
.buildAndRegister();
*/

//#loader gregtech
//import mods.gregtech.material.MaterialRegistry;

//materialId, materialName, color, iconSet, harvest level, components (optional)
//val dustMaterial = MaterialRegistry.createDustMaterial(700, "test", 0xFFAA33, "dull", 2);
//dustMaterial.addFlags(["GENERATE_ORE", "GENERATE_PLATE"]);